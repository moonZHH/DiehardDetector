<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="10"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="13"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="11"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="11"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="13"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="13"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="14" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="14"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="10"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="11"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="14"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="void &lt;init&gt;(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="void removeRange(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ListItr" AccessPath="[&lt;java.util.ArrayList$Itr: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ListItr" AccessPath="[&lt;java.util.ArrayList$ListItr: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="8"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="8" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="8"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="8"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="9"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="9"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ListItr" AccessPath="[&lt;java.util.ArrayList$ListItr: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.lang.Object[], char[]]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$Itr" AccessPath="[&lt;java.util.ArrayList$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="void trimToSize()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void ensureCapacity(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="15"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="15" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="15"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="15"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="13" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="8" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="9" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="10" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="15" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="14" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="11" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap></gaps></summary>