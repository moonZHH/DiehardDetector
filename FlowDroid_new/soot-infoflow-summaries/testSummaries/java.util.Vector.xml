<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Enumeration elements()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$1" AccessPath="[&lt;java.util.Vector$1: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.lang.Object mutex&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="void copyInto(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="134"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="137"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="133" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="135"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="137"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="137"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="135"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="133"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="133"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="134"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="135"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="void &lt;init&gt;(java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void setSize(int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="int capacity()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="131"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="131"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="131" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="131"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="132"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="132"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="132" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="132"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="void &lt;init&gt;(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int capacityIncrement&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.lang.Object[], char[]]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="void insertElementAt(java.lang.Object,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void addElement(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="void trimToSize()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object lastElement()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object elementAt(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="void ensureCapacity(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object firstElement()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="int indexOf(java.lang.Object,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void setElementAt(java.lang.Object,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="130"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="130"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="130"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="130" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="131" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="130" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="137" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="134" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="135" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="133" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="132" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>