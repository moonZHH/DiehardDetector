<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="java.lang.String retrieveString()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.GapClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.GapClass: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="void storeData(soot.jimple.infoflow.test.methodSummary.Data)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.GapClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.GapClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="void fillDataString(java.lang.String,soot.jimple.infoflow.test.methodSummary.Data)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" taintSubFields="true"></to></flow></flows></method><method id="soot.jimple.infoflow.test.methodSummary.Data dataThroughGap(soot.jimple.infoflow.test.methodSummary.Data)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String callTheGap(java.lang.String)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="void storeString(java.lang.String)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.GapClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.GapClass: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" taintSubFields="true"></to></flow></flows></method><method id="soot.jimple.infoflow.test.methodSummary.Data retrieveData()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.GapClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.GapClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method></methods><gaps></gaps></summary>