<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="48"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="48"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="48" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="48"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="48" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="48" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="48"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="48"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="46" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="46"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="46" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="46" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="46" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="46"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="46" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="46"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="54"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="50"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="51"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="53"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="53"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="51"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="54"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="50"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="51"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="53"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="54" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="50"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="void removeRange(int,int)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="45"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="45"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="45"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="45"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="43" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="43"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="43"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="43"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="43" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="43" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="43"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="43"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="44"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="44"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="44" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="44"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="44"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="44"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="44" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="57"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="57"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="57" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="57"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="59"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="59"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="59" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="59"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[], char[]]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="47" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="47"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="47" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="47"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="47" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow></flows></method><method id="boolean remove(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="55"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="55"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="55" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="55"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="55"></to></flow></flows></method><method id="void &lt;init&gt;()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="56"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="56" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="56"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="56"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void clear()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="49"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="49" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="49" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="49"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="49" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="49"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="49"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="49" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="55" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="48" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="47" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="56" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="46" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="53" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="45" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="54" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="51" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="44" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="43" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="57" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="50" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="59" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>