<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="int previousIndex()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="void set(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void remove()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int lastRet&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.Vector, int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int nextIndex()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object previous()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int lastRet&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object next()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int lastRet&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="void add(java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[java.util.Vector, int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[java.util.Vector, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.Vector, int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.Vector, int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.Vector, int]"></from><to sourceSinkType="Field" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.Vector, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;, &lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.Vector, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method></methods><gaps></gaps></summary>